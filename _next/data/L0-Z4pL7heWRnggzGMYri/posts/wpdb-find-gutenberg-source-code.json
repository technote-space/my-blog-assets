{"pageProps":{"post":{"id":"wpxml-find-gutenberg-source-code","title":"Gutenbergの実装箇所を素早く見つけて開発をはかどらせる","content":"<html><head></head><body><div class=\"toc-wrapper\"><input type=\"checkbox\" class=\"toc-checkbox\" id=\"toc-checkbox-sgvi82huv0\" checked><label class=\"toc-title\" for=\"toc-checkbox-sgvi82huv0\">目次</label><nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#すべてのソースコード\">すべてのソースコード</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#search\">検索してみる</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#relative\">相対パスからたどる</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#wordpress\">WordPress名前空間からたどる</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#variable\">変数名からたどる</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#まとめ\">まとめ</a></li></ol></nav></div><p>公式のハンドブックやいろいろな開発者によるブログ記事なども充実してきましたが、一番確実なのは実装コードを実際に見てみることです。</p>\n\n<p>ただ、Gutenbergのコードは量が多く、慣れないと目的の実装箇所を見つけるのに時間がかかってしまうことでしょう</p>\n\n<h2 id=\"すべてのソースコード\">すべてのソースコード<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#すべてのソースコード\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n\n<p>GutenbergはGitHubで管理されており、すべてのソースコードが公開されています。</p>\n\n<div class=\"blog-card\"><iframe src=\"https://blog-card-ten.vercel.app/card/https%3A%2F%2Fgithub.com%2FWordPress%2Fgutenberg?id=blog-card-b6hrrn0j2i&#x26;referrer=https%3A%2F%2Ftechnote.space%2Fposts%2Fwpxml-find-gutenberg-source-code%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" data-id=\"blog-card-b6hrrn0j2i\"></iframe></div>\n\n<p>したがって時間さえあれば順に目を通すことで必ず実装コードを見つけることはできます。</p>\n\n<p>ただし前述の通り量が多いため現実的ではありません。</p>\n\n<p>ここでは実装コードを見つけるいくつかの方法を挙げておきます。 </p>\n\n<h2 id=\"search\">検索してみる<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#search\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n\n<p>GitHubには検索機能がついています。</p>\n\n<p>検索はGitHub全体だけではなく<span class=\"double-underline\">プロジェクト内だけでも行うことができる</span>ため、大体これで見つかります。</p>\n\n<p>例として 『IconButton』 を探してみます。</p>\n\n<p>GitHubのGutenbergのページに行き、左上の検索欄に『IconButton』と入力します。</p>\n\n<div class=\"blog-card\"><iframe src=\"https://blog-card-ten.vercel.app/card/https%3A%2F%2Fgithub.com%2FWordPress%2Fgutenberg?id=blog-card-b6hrrn0j2i&#x26;referrer=https%3A%2F%2Ftechnote.space%2Fposts%2Fwpxml-find-gutenberg-source-code%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" data-id=\"blog-card-b6hrrn0j2i\"></iframe></div>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270243.png\"><img src=\"https://technote.space/uploads/2019/03/03270243.png\" alt=\"\" class=\"wp-image-1307\"></a></figure>\n\n<p>そのままエンターを押すか『In this repository』でリポジトリ内で検索を行うことができます。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270246.png\"><img src=\"https://technote.space/uploads/2019/03/03270246-1024x587.png\" alt=\"\" class=\"wp-image-1308\"></a></figure>\n\n<p>コード内に69件見つかったようです。</p>\n\n<p>定義を探す場合は『export IconButton』という風に <em>export</em> も付けるともう少し絞り込むことができます。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270251.png\"><img src=\"https://technote.space/uploads/2019/03/03270251-1024x495.png\" alt=\"\" class=\"wp-image-1309\"></a></figure>\n\n<p>50件になりました。</p>\n\n<p>後は検索結果を見て正解を探します。</p>\n\n<p>大抵の場合 『 export default 名前 』という風になっています。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270254.png\"><img src=\"https://technote.space/uploads/2019/03/03270254.png\" alt=\"\" class=\"wp-image-1310\"></a></figure>\n\n<p>見つかりました。</p>\n\n<p>リンクからソースを見ることができます。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270258.png\"><img src=\"https://technote.space/uploads/2019/03/03270258.png\" alt=\"\" class=\"wp-image-1311\"></a></figure>\n\n<p>どんな引数を受け付けるのかが一目でわかります。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270259.png\"><img src=\"https://technote.space/uploads/2019/03/03270259.png\" alt=\"\" class=\"wp-image-1312\"></a></figure>\n\n<p>基本はボタンが表示され、ツールチップがある場合はツールチップも表示されるようになることがわかります。</p>\n\n<h2 id=\"relative\">相対パスからたどる<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#relative\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n\n<p>先ほどの IconButton は Button を使用していましたが、ソースの上部に Button を使用するための記述があります。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270302.png\"><img src=\"https://technote.space/uploads/2019/03/03270302.png\" alt=\"\" class=\"wp-image-1314\"></a></figure>\n\n<p>この記述から素早く Button の定義に移動できます。</p>\n\n<p>『..』は１つ上のディレクトリを指します。<br>（『.』は同じ層のディレクトリを指します。）</p>\n\n<p>現在『gutenberg/packages/components/src/icon-button/index.js』にいます。</p>\n\n<p><em>index.js</em> は除いて１つ上の『src』を選択します。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270306.png\"><img src=\"https://technote.space/uploads/2019/03/03270306.png\" alt=\"\" class=\"wp-image-1315\"></a><figcaption><br></figcaption></figure>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270309.png\"><img src=\"https://technote.space/uploads/2019/03/03270309.png\" alt=\"\" class=\"wp-image-1316\"></a></figure>\n\n<p>『button』に移動します。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270310.png\"><img src=\"https://technote.space/uploads/2019/03/03270310.png\" alt=\"\" class=\"wp-image-1317\"></a></figure>\n\n<p>『index.js』にコードがあります。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270313.png\"><img src=\"https://technote.space/uploads/2019/03/03270313.png\" alt=\"\" class=\"wp-image-1318\"></a></figure>\n\n<h2 id=\"wordpress\">WordPress名前空間からたどる<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#wordpress\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n\n<p>ソースコードを見ると気づくと思いますが</p>\n\n<pre class=\"language-js\" style=\"background: #2e3440\"><code class=\"language-js\"><span style=\"color: #81A1C1\">import</span><span style=\"color: #D8DEE9FF\"> ... </span><span style=\"color: #81A1C1\">from</span><span style=\"color: #D8DEE9FF\"> @</span><span style=\"color: #8FBCBB\">wordpress</span><span style=\"color: #D8DEE9FF\">/... </span></code></pre>\n\n<p>のような「@wordpress」を含む記述がたくさん出てきます。</p>\n\n<p>webpack の設定を見てみると、いろいろ処理して結局 packages/『@wordpress/...の@wordpressを取り除いたもの』が基準になることがわかります。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270324.png\"><img src=\"https://technote.space/uploads/2019/03/03270324.png\" alt=\"\" class=\"wp-image-1320\"></a></figure>\n\n<p>ここでは下の例でソースコードを探してみます。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270323.png\"><img src=\"https://technote.space/uploads/2019/03/03270323.png\" alt=\"\" class=\"wp-image-1319\"></a></figure>\n\n<p><em>@wordpress/data</em> なので packages/data に移動します。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270330.png\"><img src=\"https://technote.space/uploads/2019/03/03270330.png\" alt=\"\" class=\"wp-image-1321\"></a></figure>\n\n<p>さらに <em>src/index.js</em> に移動します。</p>\n\n<figure class=\"wp-block-image\"><img src=\"https://technote.space/uploads/2019/03/03270332.png\" alt=\"\" class=\"wp-image-1322\"></figure>\n\n<p>探している『withSelect』と『withDispatch』がありました。</p>\n\n<p>先ほどの <strong><a href=\"#relative\">相対パスからたどる</a></strong> 方法で実際のコードまで移動します。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03270338.png\"><img src=\"https://technote.space/uploads/2019/03/03270338.png\" alt=\"\" class=\"wp-image-1323\"></a></figure>\n\n<p>ソースコードを見つけることができました。</p>\n\n<h2 id=\"variable\">変数名からたどる<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#variable\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n\n<p>実装例などで次のような記述をよく見かけます。</p>\n\n<pre class=\"wp-block-code\" style=\"background: #2e3440\"><code style=\"color: undefined\">const {PluginSidebar, PluginMoreMenuItem} = wp.editPost;\nconst {PanelBody, IconButton} = wp.components;</code></pre>\n\n<p>『PluginSidebar』や『IconButton』を前述の <strong><a href=\"#search\">検索してみる</a></strong> の方法で見つけてもよいですが、</p>\n\n<p><em>wp.editPost</em> や <em>wp.components</em> からもたどることができます。</p>\n\n<p>例えば <em>wp.components</em> の場合は『packages/components』、<em>wp.editPost</em> の場合は『packages/edit-post』が基準になります。</p>\n\n<p>実際に『PluginSidebar』のソースコードを探してみます。</p>\n\n<p>まず『packages/edit-post』に移動します。</p>\n\n<figure class=\"wp-block-image\"><a href=\"https://technote.space/uploads/2019/03/03271251.png\"><img src=\"https://technote.space/uploads/2019/03/03271251.png\" alt=\"\" class=\"wp-image-1331\"></a></figure>\n\n<p>さらに <em>src/index.js</em> に移動します。 </p>\n\n<figure class=\"wp-block-image\"><img src=\"https://technote.space/uploads/2019/03/03271252.png\" alt=\"\" class=\"wp-image-1332\"></figure>\n\n<p>後は <strong><a href=\"#relative\">相対パスからたどる</a></strong> 方法でソースコードにたどり着くことができます。</p>\n\n<h2 id=\"まとめ\">まとめ<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#まとめ\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n\n<p>ソースコードを見つけるための方法を４つ紹介しました。</p>\n\n<ul><li><a href=\"#search\">検索してみる</a></li><li><a href=\"#relative\">相対パスからたどる</a></li><li><a href=\"#wordpress\">WordPress名前空間からたどる</a></li><li><a href=\"#variable\">変数名からたどる</a></li></ul>\n\n<p>素早く目的のコードを見つけて動作を理解する手助けになれば幸いです。</p>\n<!-- /wp:paragraph --></body></html>","excerpt":"公式のハンドブックやいろいろな開発者によるブログ記事なども充実してきましたが、一番確実なのは実装コードを実際に見てみることです。 ただ、Gutenbergのコードは量が多く、慣れないと目的の実装箇所を見つけるのに時間がかかってしまうことでし...","postType":"post","tags":[{"slug":"gutenberg","name":"Gutenberg"}],"thumbnail":"https://technote.space/uploads/2018/12/banner-772x250.jpg","dominantColor":"rgba(111,111,111,1)","createdAt":"2019-03-26T19:06:03.000Z","updatedAt":null},"prev":null,"next":{"id":"markdown-2022-08-13-height-auto-transition","title":"auto height で transition","excerpt":"概要 このブログの目次でも使用している以下のような動作  behavior  max-height を使用する方法が紹介されている事があるが、動きが不自然になる。      max-height によるホバー開閉の実装例    ホバーを外し...","postType":"post","tags":[{"slug":"css","name":"css"}],"thumbnail":"https://technote.space/uploads/2022/08/202208122038.gif","createdAt":"2022-08-12T15:00:00.000Z","updatedAt":"2022-08-12T15:00:00.000Z"},"headerPages":[],"footerPages":[{"label":"About","url":"/pages/wpxml-about/"},{"label":"プライバシーポリシー","url":"/pages/wpxml-privacy-policy/"},{"label":"お問い合わせ","url":"/pages/wpxml-contact/"}]},"__N_SSG":true}