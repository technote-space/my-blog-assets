{"pageProps":{"post":{"id":"wpxml-laravel-get-url-parameter","title":"【Laravel】RequestでURLのパラメータを取得する","content":"<html><head></head><body><div class=\"toc-wrapper\"><input type=\"checkbox\" class=\"toc-checkbox\" id=\"toc-checkbox-02gf30gmn0\" checked><label class=\"toc-title\" for=\"toc-checkbox-02gf30gmn0\">目次</label><nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#きっかけ\">きっかけ</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#解決方法\">解決方法</a></li></ol></nav></div><h2 id=\"きっかけ\">きっかけ<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#きっかけ\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n\n<p>LaravelでapiResourceを使用してCRUD用のAPIルートを設定した場合、以下のようになります。</p>\n\n<figure class=\"wp-block-table\"><table class=\"\"><tbody><tr><td>Method</td><td>URI</td><td>Name</td></tr><tr><td>GET|HEAD</td><td>api/tests</td><td>tests.index</td></tr><tr><td>POST</td><td>api/tests</td><td>tests.store</td></tr><tr><td>GET|HEAD</td><td>api/tests/{test}</td><td>tests.show</td></tr><tr><td>PUT|PATCH</td><td>api/tests/{test}</td><td>tests.update</td></tr><tr><td>DELETE</td><td>api/tests/{test}</td><td>tests.destroy</td></tr></tbody></table></figure>\n\n<p>例えばコントローラであれば以下のようにすることで {test} の部分である更新対象のIDを取得できます。</p>\n\n<pre class=\"language-php\" style=\"background: #2e3440\"><code class=\"language-php\"><span style=\"color: #D8DEE9FF\">public function update(Request $request, $id)</span></code></pre>\n\n<p>Laravelはサービスコンテナという強力なDI機能があり、 FormRequest を拡張して更新用にバリデーションを行う実装を持たせた UpdateRequest などを作成し以下のように使用することで、このメソッドが呼ばれるときに自動でインスタンスを作成し、バリデーションを実行してくれるようになります。</p>\n\n<pre class=\"language-php\" style=\"background: #2e3440\"><code class=\"language-php\"><span style=\"color: #D8DEE9FF\">public function update(UpdateRequest $request, $id)</span></code></pre>\n\n<p>この UpdateRequest の中でさらに $id を使ってバリデーションなどを実行したい場合に、コントローラで受け取った $id を $request に渡すこともできますが、<span class=\"double-underline\">自動でバリデーションする時点で使用したい場合</span>はその方法をとることができません。</p>\n\n<h2 id=\"解決方法\">解決方法<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#解決方法\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n\n<p><span class=\"double-underline\">Request の route メソッド</span>で取得可能です。</p>\n\n<p>Request を拡張したクラス内で以下のように使用します。 </p>\n\n<pre class=\"language-php\" style=\"background: #2e3440\"><code class=\"language-php\"><span style=\"color: #D8DEE9FF\">$this->route($param)</span></code></pre>\n\n<p>$param には 設定したパラメータ名を指定します。</p>\n\n<p>例えばURIが以下の場合は test で {test} に渡された値を取得できます。</p>\n\n<pre class=\"wp-block-code\" style=\"background: #2e3440\"><code style=\"color: undefined\">api/tests/{test}</code></pre>\n\n<pre class=\"language-php\" style=\"background: #2e3440\"><code class=\"language-php\"><span style=\"color: #D8DEE9FF\">$this->route('test')</span></code></pre>\n\n<p>またマジックメソッドも実装されており、上の例では</p>\n\n<pre class=\"language-php\" style=\"background: #2e3440\"><code class=\"language-php\"><span style=\"color: #D8DEE9FF\">$this->test</span></code></pre>\n\n<p>でも取得可能です。</p>\n<!-- /wp:paragraph --></body></html>","excerpt":"きっかけ LaravelでapiResourceを使用してCRUD用のAPIルートを設定した場合、以下のようになります。 MethodURINameGET|HEADapi/teststests.indexPOSTapi/teststests...","postType":"post","tags":[{"slug":"laravel","name":"Laravel"},{"slug":"php","name":"PHP"}],"thumbnail":"https://raw.githubusercontent.com/technote-space/my-blog-assets/main/uploads/2019/08/201908151553.png","dominantColor":"rgba(251,80,59,0.1803921568627451)","createdAt":"2019-08-15T12:45:02.000Z","updatedAt":null},"prev":{"id":"wpxml-use-vue-i18","title":"【Vue.js】i18n をテンプレート以外から利用する","excerpt":"Vue I18n の設定例 plugins/i18n.js app.js  テンプレート内で使用する場合は $t を使用すればよい。  Vueファイル以外のJavaScriptファイル内などから使用する場合は new VueI18n したも...","postType":"post","thumbnail":"https://raw.githubusercontent.com/technote-space/my-blog-assets/main/uploads/2019/08/201908151529.png","createdAt":"2019-08-16T04:59:39.000Z","updatedAt":null},"next":{"id":"wpxml-js-array-to-object","title":"JavaScript でオブジェクトの配列の特定のキーの値を使用してオブジェクトに変換する","excerpt":"やりたいこと のようなオブジェクトの配列を、idの値をキーとする以下のようなオブジェクトに変換。 このように変換しておくことで  で id = 2 のデータがあるかどうかがすぐわかり、また  で id = 2 のデータを簡単に取得可能。  ...","postType":"post","thumbnail":"https://raw.githubusercontent.com/technote-space/my-blog-assets/main/uploads/2019/08/javascript.png","createdAt":"2019-08-05T04:51:49.000Z","updatedAt":null},"headerPages":[],"footerPages":[{"label":"About","url":"/pages/wpxml-about/"},{"label":"プライバシーポリシー","url":"/pages/wpxml-privacy-policy/"},{"label":"お問い合わせ","url":"/pages/wpxml-contact/"}]},"__N_SSG":true}