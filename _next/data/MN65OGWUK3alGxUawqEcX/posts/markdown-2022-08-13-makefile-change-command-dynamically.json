{"pageProps":{"post":{"id":"markdown-2022-08-13-makefile-change-command-dynamically","title":"Makefile で 動的にコマンドを変える方法","content":"<html><head></head><body><div class=\"toc-wrapper\"><input type=\"checkbox\" class=\"toc-checkbox\" id=\"toc-checkbox-fst1ttv8ca\" checked><label class=\"toc-title\" for=\"toc-checkbox-fst1ttv8ca\">目次</label><nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#概要\">概要</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#実装\">実装</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#動的にコマンドを変更\">動的にコマンドを変更</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#動的にオプションを設定\">動的にオプションを設定</a></li></ol></li></ol></nav></div><h2 id=\"概要\">概要<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#概要\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n<p>使用できるコマンドかどうかチェックして、使用できない場合は別のコマンドを使用するみたいなことをやりたかったので</p>\n<p>例えば、<code>docker-compose</code> がインストールされている場合はそれを使用、それ以外の場合は <code>docker compose</code> を使用みたいな感じ</p>\n<h2 id=\"実装\">実装<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#実装\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2>\n<h3 id=\"動的にコマンドを変更\">動的にコマンドを変更<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#動的にコマンドを変更\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3>\n<pre style=\"background: #2e3440\"><code class=\"language-makefile\"><span style=\"color: #D8DEE9\">DOCKER_COMPOSE</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">:=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">$(</span><span style=\"color: #D8DEE9\">command -v docker-compose >/dev/null &#x26;&#x26; echo docker-compose || echo docker compose</span><span style=\"color: #81A1C1\">)</span>\n\n<span style=\"color: #88C0D0\">up</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">\t$(DOCKER_COMPOSE) up -d</span>\n<span style=\"color: #88C0D0\">down</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">\t$(DOCKER_COMPOSE) down</span>\n</code></pre>\n<ul>\n<li><code>command -v</code> でコマンドの存在をチェックし、存在すればそれを、存在しなければ別のコマンドを <code>echo</code></li>\n<li><code>:=</code> は即時評価。<code>echo</code> されて変数に代入された結果を <code>$(変数)</code> で使用</li>\n</ul>\n<h3 id=\"動的にオプションを設定\">動的にオプションを設定<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#動的にオプションを設定\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3>\n<p>GitHub Actions で <code>docker compose exec</code> する際に <code>-T</code> オプションが必要みたいなときは以下で実現できる。</p>\n<pre style=\"background: #2e3440\"><code class=\"language-makefile\"><span style=\"color: #D8DEE9\">TTY_OPTION</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">:=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">$(</span><span style=\"color: #D8DEE9\">echo $CI | grep -q true &#x26;&#x26; echo \"-T\"</span><span style=\"color: #81A1C1\">)</span>\n\n<span style=\"color: #88C0D0\">test</span><span style=\"color: #ECEFF4\">:</span>\n<span style=\"color: #D8DEE9FF\">\t$(DOCKER_COMPOSE) exec $(TTY_OPTION) app yarn lint</span>\n</code></pre>\n<ul>\n<li>GitHub Actions 実行時に設定される <code>$CI=true</code> を <code>grep</code> コマンドでチェックし、該当する場合に <code>-T</code> を <code>echo</code></li>\n</ul></body></html>","excerpt":"概要 使用できるコマンドかどうかチェックして、使用できない場合は別のコマンドを使用するみたいなことをやりたかったので 例えば、docker-compose がインストールされている場合はそれを使用、それ以外の場合は docker compo...","postType":"post","tags":[{"slug":"makefile","name":"makefile"}],"thumbnail":null,"dominantColor":null,"createdAt":"2022-08-12T15:00:00.000Z","updatedAt":"2022-08-12T15:00:00.000Z"},"prev":null,"next":{"id":"markdown-2022-08-13-height-auto-transition","title":"auto height で transition","excerpt":"概要 このブログの目次でも使用している以下のような動作  behavior  max-height を使用する方法が紹介されている事があるが、動きが不自然になる。      max-height によるホバー開閉の実装例    ホバーを外し...","postType":"post","tags":[{"slug":"css","name":"css"}],"thumbnail":"https://technote.space/uploads/2022/08/202208122038.gif","createdAt":"2022-08-12T15:00:00.000Z","updatedAt":"2022-08-12T15:00:00.000Z"},"headerPages":[],"footerPages":[{"label":"About","url":"/pages/wpxml-about/"},{"label":"プライバシーポリシー","url":"/pages/wpxml-privacy-policy/"},{"label":"お問い合わせ","url":"/pages/wpxml-contact/"}]},"__N_SSG":true}