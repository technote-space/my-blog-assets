{"pageProps":{"post":{"id":"wpxml-wordpress-gutenberg-editor-css-summary","title":"Gutenbergエディタとクラシックエディタの判定やCSSの読み込み方法まとめ","content":"<html><head></head><body><div class=\"toc-wrapper\"><input type=\"checkbox\" class=\"toc-checkbox\" id=\"toc-checkbox-fdo8ts1rdc\" checked><label class=\"toc-title\" for=\"toc-checkbox-fdo8ts1rdc\">目次</label><nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#エディタの判定\">エディタの判定</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#以下の代表的なアクションでは使用できません\">以下の代表的なアクションでは使用できません</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#以下の代表的なアクションフィルタでは使用できます\">以下の代表的なアクション、フィルタでは使用できます</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#実際に判定を行っている関数\">実際に判定を行っている関数</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#エディタに適用するcssの読み込み\">エディタに適用するCSSの読み込み</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#クラシックエディタと似た方法\">クラシックエディタと似た方法</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#新しく追加された方法\">新しく追加された方法</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#gutenbergエディタとクラシックエディタでcssを分けてadd_editor_styleで登録したい場合\">GutenbergエディタとクラシックエディタでCSSを分けてadd_editor_styleで登録したい場合</a></li></ol></nav></div><h2 id=\"エディタの判定\">エディタの判定<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#エディタの判定\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2><br />以下の方法でGutenbergエディタ（ブロックエディタ）とクラシックエディタを判定することが可能です。<br /><pre class=\"php\">$current_screen = get_current_screen();<br />if ( ( method_exists( $current_screen, 'is_block_editor' ) &#x26;&#x26; $current_screen->is_block_editor() ) || ( function_exists( 'is_gutenberg_page' ) &#x26;&#x26; is_gutenberg_page() ) ) {<br />    // Gutenberg Editor<br />} else {<br />    // Classic Editor<br />}</pre><br />is_block_editorはWordPress5.0から使用できるメソッドです。<br /><br />WordPress5.0未満でプラグインを使用してGutenbergエディタを利用している場合は、Gutenbergプラグインが提供しているis_gutenberg_page関数を使用します。<br /><h3 id=\"以下の代表的なアクションでは使用できません\">以下の代表的なアクションでは使用できません<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#以下の代表的なアクションでは使用できません\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3><br /><ul><br /> \t<li>plugins_loaded</li><br /> \t<li>setup_theme</li><br /> \t<li>after_setup_theme</li><br /> \t<li>init</li><br /> \t<li>wp_loaded</li><br /> \t<li>admin_init</li><br /> \t<li>load-{$page_hook}</li><br /></ul><br /><h3 id=\"以下の代表的なアクションフィルタでは使用できます\">以下の代表的なアクション、フィルタでは使用できます<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#以下の代表的なアクションフィルタでは使用できます\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3><br /><ul><br /> \t<li>admin_enqueue_scripts</li><br /> \t<li>admin_print_styles</li><br /> \t<li>admin_head</li><br /> \t<li>admin_notices</li><br /> \t<li>admin_title</li><br /> \t<li>admin_body_class</li><br /> \t<li>admin_footer</li><br /></ul><br />具体的に使用可能になるのは以下のコード以降です。<br /><br /><em>wp-admin/edit-form-blocks.php</em><br /><pre class=\"php\">// Flag that we're loading the block editor.<br />$current_screen = get_current_screen();<br />$current_screen->is_block_editor( true );</pre><br /><h3 id=\"実際に判定を行っている関数\">実際に判定を行っている関数<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#実際に判定を行っている関数\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3><br />上記の方法は別の個所で行われた判定の結果を使用しているにすぎません。<br /><br />実際には<span class=\"double-underline\">「use_block_editor_for_post」</span>関数で行います。<br /><br />$post が取得できる個所では次の関数で判定することができます。<br /><pre class=\"php\">if ( function_exists( 'use_block_editor_for_post' ) &#x26;&#x26; use_block_editor_for_post( $post ) ) {<br /> &#x3C;span class=\"hljs-comment\">// Gutenberg Editor&#x3C;/span><br />} else {<br /> &#x3C;span class=\"hljs-comment\">// Classic Editor&#x3C;/span><br />}</pre><br /><h2 id=\"エディタに適用するcssの読み込み\">エディタに適用するCSSの読み込み<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#エディタに適用するcssの読み込み\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2><br />クラシックエディタ場合は<span class=\"double-underline\">「add_editor_style」にCSSファイル名を指定</span>することで、テーマのCSSをエディタに反映することができました。<br /><pre>add_action( 'after_setup_theme', function () {<br />   add_editor_style( '/css/editor-style.css' );<br />} );</pre><br />Gutenbergエディタの場合は大きく２つの方法をとることができます。<br /><h3 id=\"クラシックエディタと似た方法\">クラシックエディタと似た方法<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#クラシックエディタと似た方法\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3><br />上のクラシックエディタ用のコードだとGutenbergエディタには反映されません。<br /><br />しかし<br /><pre class=\"php\">&#x3C;span class=\"nx\">add_theme_support&#x3C;/span>&#x3C;span class=\"p\">(&#x3C;/span> &#x3C;span class=\"s1\">'editor-styles'&#x3C;/span> &#x3C;span class=\"p\">);&#x3C;/span></pre><br />を追加しておくと反映されるようになります。<br /><pre class=\"php\">add_action( 'after_setup_theme', function () {<br />   &#x3C;span class=\"double-underline\" data-ma_color=\"#882\">add_theme_support( 'editor-styles' );&#x3C;/span><br />   add_editor_style( '/css/editor-style.css' );<br />} );</pre><br /><em>wp-admin/edit-form-blocks.php</em><br /><pre class=\"php\">if ( $editor_styles &#x26;&#x26; current_theme_supports( '&#x3C;span class=\"double-underline\" data-ma_color=\"#882\">editor-styles&#x3C;/span>' ) ) {<br />   foreach ( $editor_styles as $style ) {<br />      if ( preg_match( '~^(https?:)?//~', $style ) ) {<br />         $response = wp_remote_get( $style );<br />         if ( ! is_wp_error( $response ) ) {<br />            $styles[] = array(<br />               'css' => wp_remote_retrieve_body( $response ),<br />            );<br />         }<br />      } else {<br />         $file = get_theme_file_path( $style );<br />         if ( file_exists( $file ) ) {<br />            $styles[] = array(<br />               'css'     => file_get_contents( $file ),<br />               'baseURL' => get_theme_file_uri( $style ),<br />            );<br />         }<br />      }<br />   }<br />}</pre><br />この方法で追加されたCSSは<span class=\"double-underline\">適切なセレクタで囲う処理がされ、エディタ以外にスタイルが適用されないように自動で処理</span>してくれます。<br /><br />処理内容を詳しく知りたい方は以下のファイルを「.editor-styles-wrapper」で検索してその周辺を眺めるとよいでしょう。<br /><br /><em>wp-includes/js/dist/editor.js</em><br /><br />ただし「editor_stylesheets」や「mce_css」フィルタを使用して追加されたCSSに関してはこの方法では反映されません。<br /><br />特にプラグイン開発している場合は注意が必要です。<br /><h3 id=\"新しく追加された方法\">新しく追加された方法<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#新しく追加された方法\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3><br />WordPress5.0から<span class=\"double-underline\">「enqueue_block_editor_assets」</span>というアクションが追加されました。<br /><br />このアクションは「admin_print_styles」「admin_print_scripts」「admin_print_footer_scripts」よりも前に呼ばれるため、このアクションをフックし、その中で「wp_enqueue_style」や「wp_enqueue_script」でCSSやJSを登録することができます。<br /><pre class=\"php\">add_action( 'enqueue_block_editor_assets', function () {<br />   wp_enqueue_style( 'my-theme-style', get_theme_file_uri( '/css/block-editor.css' ) );<br />} );</pre><br />この方法で追加されたCSSは前述のような<span class=\"double-underline\">セレクタで囲うような処理をしてくれません</span>。<br /><br />エディタ部分だけにスタイルを当てたい場合は「.editor-styles-wrapper」を付けたほうがよいでしょう。<br /><br />逆にエディタ部分以外にスタイルを当てたい場合はこちらの方法を使用する必要があります。<br /><h2 id=\"gutenbergエディタとクラシックエディタでcssを分けてadd_editor_styleで登録したい場合\">GutenbergエディタとクラシックエディタでCSSを分けてadd_editor_styleで登録したい場合<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#gutenbergエディタとクラシックエディタでcssを分けてadd_editor_styleで登録したい場合\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2><br />「after_setup_theme」をフックする方法は使えません。<br /><pre class=\"php\">add_action( 'after_setup_theme', function () {<br />   add_theme_support( 'editor-styles' );<br />   add_editor_style( '/css/editor-style.css' );<br />} );</pre><br />なぜなら「after_setup_theme」の段階では前述のエディタ判定が使用できないためです。<br /><br />WordPress4.9から「replace_editor」フィルタが追加され、ここでは「$post」が使用できるため、以下のようなコードでエディタごとに異なるCSSを読み込むことが可能です。<br /><pre class=\"php\">add_action( 'after_setup_theme', function () {<br />   $block_editor   = function () {<br />      add_theme_support( 'editor-styles' );<br />      add_editor_style( 'block-editor.css' );<br />   };<br />   $classic_editor = function () {<br />      add_editor_style( 'classic-editor.css' );<br />   };<br /><br />   global $wp_version;<br />   if ( version_compare( $wp_version, '4.9.0', '>=' ) ) {<br />      add_filter( 'replace_editor', function ( $result, $post ) use ( $block_editor, $classic_editor ) {<br />         if ( use_block_editor_for_post( $post ) ) {<br />            $block_editor();<br />         } else {<br />            $classic_editor();<br />         }<br /><br />         return $result;<br />      }, 10, 2 );<br />   } else {<br />      $classic_editor();<br />   }<br />} );</pre><br />ただしGutenbergからはクラシックエディタをブロックとして利用できるため、このクラシックエディタブロックにもスタイルが適用されることなどを考慮する必要があります。<br /><br />上記のように考慮すべきことが増えるだけなのでエディタごとにCSSを分けず、<span class=\"double-underline\">今まで「add_editor_style」していた個所に「add_theme_support( 'editor-styles' )」を追加</span>するのがよいと思います。</body></html>","excerpt":"エディタの判定 以下の方法でGutenbergエディタ（ブロックエディタ）とクラシックエディタを判定することが可能です。 is_block_editorはWordPress5.0から使用できるメソッドです。 WordPress5.0未満でプ...","postType":"post","tags":[{"slug":"gutenberg","name":"Gutenberg"},{"slug":"%e3%82%af%e3%83%a9%e3%82%b7%e3%83%83%e3%82%af%e3%82%a8%e3%83%87%e3%82%a3%e3%82%bf","name":"クラシックエディタ"},{"slug":"%e3%83%96%e3%83%ad%e3%83%83%e3%82%af%e3%82%a8%e3%83%87%e3%82%a3%e3%82%bf","name":"ブロックエディタ"}],"thumbnail":"https://technote.space/uploads/2018/12/banner-772x250.jpg","dominantColor":"rgba(111,111,111,1)","createdAt":"2018-12-13T10:18:18.000Z","updatedAt":null},"prev":{"id":"wpxml-wordpress-gutenberg-editor-external-css","title":"Gutenbergエディタにテーマ以外の外部CSSを追加する方法","excerpt":"テーマのCSSをエディタに適用することで公開後のデザインに近づけることができます。 今までのクラシックエディタではテーマディレクトリ配下のCSSを「add_editor_style」を使用して追加することができました。 この方法で追加してい...","postType":"post","tags":[{"slug":"gutenberg","name":"Gutenberg"},{"slug":"%e3%83%96%e3%83%ad%e3%83%83%e3%82%af%e3%82%a8%e3%83%87%e3%82%a3%e3%82%bf","name":"ブロックエディタ"}],"thumbnail":"https://technote.space/uploads/2018/12/banner-772x250.jpg","createdAt":"2018-12-20T20:57:43.000Z","updatedAt":null},"next":{"id":"wpxml-wordpress-gutenberg-domready","title":"GutenbergエディタのDOMを操作をしたい場合","excerpt":"今までのエディタでは「tiny_mce_before_init」フィルタなどのフックでクラスを付与したり色々な設定を変更したりすることができました。 Gutenbergでは同様の方法をとることができません。 新たにDOMの構築後に実行するコ...","postType":"post","tags":[{"slug":"gutenberg","name":"Gutenberg"}],"thumbnail":"https://technote.space/uploads/2018/12/banner-772x250.jpg","createdAt":"2018-12-10T08:59:58.000Z","updatedAt":null},"headerPages":[],"footerPages":[{"label":"About","url":"/pages/wpxml-about/"},{"label":"プライバシーポリシー","url":"/pages/wpxml-privacy-policy/"},{"label":"お問い合わせ","url":"/pages/wpxml-contact/"}]},"__N_SSG":true}