{"pageProps":{"post":{"id":"wpxml-wordpress-tinymce-dialog","title":"WordPressのTinyMCE投稿エディタでダイアログを出すボタンを追加する","content":"<html><head></head><body><div class=\"toc-wrapper\"><input type=\"checkbox\" class=\"toc-checkbox\" id=\"toc-checkbox-aio7tm043p\" checked><label class=\"toc-title\" for=\"toc-checkbox-aio7tm043p\">目次</label><nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#実装するもの\">実装するもの</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#ボタンを追加\">ボタンを追加</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#javascriptの登録\">JavaScriptの登録</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#javascriptにボタンを実装\">JavaScriptにボタンを実装</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#使用するボタンを登録\">使用するボタンを登録</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#ダイアログを追加\">ダイアログを追加</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#まとめ\">まとめ</a></li></ol></nav></div>WordPress5.0からGutenbergという新しい投稿エディタがデフォルトになりましたが、プラグインで前のバージョンの投稿エディタ（TinyMCE）はまだ使えます。<br /><br /><div class=\"blog-card\"><iframe src=\"https://blog-card-ten.vercel.app/card/https%3A%2F%2Fja.wordpress.org%2Fplugins%2Fclassic-editor%2F?id=blog-card-nffrnvr8nl&#x26;referrer=https%3A%2F%2Ftechnote.space%2Fposts%2Fwpxml-wordpress-tinymce-dialog%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" data-id=\"blog-card-nffrnvr8nl\"></iframe></div><br /><br />また新しいエディタ内でも「フォーマット」⇒「Classic」からブロックを選択すると前のバージョンのエディタを使うことができます。<br /><br />ここではTinyMCEにダイアログが起動するボタンの設置及びダイアログの表示の方法をメモしておきます。<br /><h2 id=\"実装するもの\">実装するもの<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#実装するもの\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2><br />こんな感じのダイアログ<br /><br /><a href=\"https://technote.space/uploads/2018/12/201812072329.png\"><img class=\"alignnone size-medium wp-image-603\" src=\"https://technote.space/uploads/2018/12/201812072329-281x300.png\" alt=\"\" width=\"281\" height=\"300\"></a><br /><h2 id=\"ボタンを追加\">ボタンを追加<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ボタンを追加\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2><br />PHPとJavaScriptの両方を編集します。<br /><br />PHP側は適当に作成したプラグインファイルのmy_plugin.php、JavaScriptはそのプラグイン配下に作成することを想定しています。<br /><br /><a href=\"https://technote.space/uploads/2018/12/201812091442.png\"><img class=\"alignnone size-medium wp-image-634\" src=\"https://technote.space/uploads/2018/12/201812091442-300x129.png\" alt=\"\" width=\"300\" height=\"129\"></a><br /><br />適当なプラグインの作成方法は以下を参考にしてください。<br /><br /><div class=\"blog-card\"><iframe src=\"https://blog-card-ten.vercel.app/card/https%3A%2F%2Ftechnote.space%2Fwordpress%2Fminimum-plugin?id=blog-card-ek7v77lrt9&#x26;referrer=https%3A%2F%2Ftechnote.space%2Fposts%2Fwpxml-wordpress-tinymce-dialog%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" data-id=\"blog-card-ek7v77lrt9\"></iframe></div><br /><br /><div class=\"blog-card\"><iframe src=\"https://blog-card-ten.vercel.app/card/https%3A%2F%2Ftechnote.space%2Fwordpress%2Faction-and-filter?id=blog-card-b4o7c9kr5m&#x26;referrer=https%3A%2F%2Ftechnote.space%2Fposts%2Fwpxml-wordpress-tinymce-dialog%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" data-id=\"blog-card-b4o7c9kr5m\"></iframe></div><br /><h3 id=\"javascriptの登録\">JavaScriptの登録<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#javascriptの登録\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3><br />PHP側で「mce_external_plugins」フィルタをフックしてエディタを操作するJavaScriptを登録します。<br /><br /><em>my_plugin.php</em><br /><pre>add_filter( 'mce_external_plugins', function ( $plugins ) {<br />   $plugins['my_plugin_name'] = plugins_url('assets/js/editor.js', __FILE__ );<br />   return $plugins;<br />} );</pre><br /><h3 id=\"javascriptにボタンを実装\">JavaScriptにボタンを実装<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#javascriptにボタンを実装\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3><br />先ほど追加したJavaScriptにボタンを追加するプログラムを書きます。<br /><br /><em>editor.js</em><br /><pre>(function ($) {<br />    'use strict';<br /><br />    tinymce.create('tinymce.plugins.my_plugin', {<br />        init: function (ed) {<br />            ed.addButton('my_plugin_button', {<br />                title: 'My Plugin',<br />                icon: 'dashicon dashicons-admin-links',<br />                onclick: function () {<br />                    alert('test');<br />                }<br />            });<br />        }<br />    });<br /><br />    tinymce.PluginManager.add('my_plugin_name', tinymce.plugins.my_plugin);<br />})(jQuery);</pre><br />とりあえず今はalertで「test」と表示するだけの「my_plugin_button」ボタンを追加しておきます。<br /><br />iconは以下のページにいろいろあるので適当なものを選びます。<br /><br /><div class=\"blog-card\"><iframe src=\"https://blog-card-ten.vercel.app/card/https%3A%2F%2Fdeveloper.wordpress.org%2Fresource%2Fdashicons%2F?id=blog-card-oq0so5b2m7&#x26;referrer=https%3A%2F%2Ftechnote.space%2Fposts%2Fwpxml-wordpress-tinymce-dialog%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" data-id=\"blog-card-oq0so5b2m7\"></iframe></div><br /><br />または独自のクラスを指定して別途CSSでアイコンを設定することも可能です。<br /><h3 id=\"使用するボタンを登録\">使用するボタンを登録<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#使用するボタンを登録\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h3><br />JavaScriptで登録した「my_plugin_button」ボタンを使用できるようにPHP側で「mce_buttons」フィルタをフックして登録します。<br /><br /><em>my_plugin.php</em><br /><pre>add_filter( 'mce_buttons', function ( $buttons ) {<br />   $buttons[] = 'my_plugin_button';<br /><br />   return $buttons;<br />} );</pre><br />ここまでの処理で以下のようにボタンが追加されます。<br /><br /><a href=\"https://technote.space/uploads/2018/12/201812072312.png\"><img class=\"alignnone size-medium wp-image-602\" src=\"https://technote.space/uploads/2018/12/201812072312-300x148.png\" alt=\"\" width=\"300\" height=\"148\"></a><br /><h2 id=\"ダイアログを追加\">ダイアログを追加<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ダイアログを追加\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2><br />JavaScriptを編集してダイアログを作成します。<br /><br />ダイアログの作成は「ed.windowManager.open」で行います。<br /><pre>ed.windowManager.open({<br />    title: 'My Dialog',<br />    body: [<br />      {項目設定1},<br />      {項目設定2},<br />      ...<br />    ],<br />    onsubmit: function (e) {<br />        console.log(e);<br />    }<br />});</pre><br />設定項目には<br /><ul><br /> \t<li>type: 項目のタイプ（テキストボックス、チェックボックス、カラーピッカー等）</li><br /> \t<li>name: フィールド名</li><br /> \t<li>label: ラベル</li><br /> \t<li>value: デフォルト値</li><br /></ul><br />などを設定します。<br /><br />editor.jsは以下のような実装になります。<br /><br /><em>editor.js</em><br /><pre>(function ($) {<br />    'use strict';<br /><br />    tinymce.create('tinymce.plugins.my_plugin', {<br />        init: function (ed) {<br />            ed.addButton('my_plugin_button', {<br />                title: 'My Plugin',<br />                icon: 'dashicon dashicons-admin-links',<br />                onclick: function () {<br />                    ed.windowManager.open({<br />                        title: 'My Dialog',<br />                        body: [<br />                            {<br />                                type: 'textbox',<br />                                name: 'my_textbox_1',<br />                                label: 'テキストボックス１',<br />                                value: 'デフォルト値１',<br />                            },<br />                            {<br />                                type: 'textbox',<br />                                name: 'my_textbox_2',<br />                                label: 'テキストボックス２',<br />                            },<br />                            {<br />                                type: 'checkbox',<br />                                name: 'my_checkbox',<br />                                label: 'チェックボックス',<br />                                checked: true<br />                            },<br />                            {<br />                                type: 'listbox',<br />                                name: 'my_listbox',<br />                                label: 'リストボックス',<br />                                values: [<br />                                    {text: '選択肢1', value: '1'},<br />                                    {text: '選択肢2', value: '2'},<br />                                    {text: '選択肢3', value: '3'},<br />                                ]<br />                            },<br />                            {<br />                                type: 'colorpicker',<br />                                name: 'my_colorpicker',<br />                                label: '色選択',<br />                                value: '#ff6666'<br />                            }<br />                        ],<br />                        onsubmit: function (e) {<br />                            console.log(e);<br />                        }<br />                    });<br />                }<br />            });<br />        }<br />    });<br /><br />    tinymce.PluginManager.add('my_plugin_name', tinymce.plugins.my_plugin);<br />})(jQuery);</pre><br />ボタンを押すとダイアログが表示されるようになります。<br /><br /><a href=\"https://technote.space/uploads/2018/12/201812072329.png\"><img class=\"alignnone size-medium wp-image-603\" src=\"https://technote.space/uploads/2018/12/201812072329-281x300.png\" alt=\"\" width=\"281\" height=\"300\"></a><br /><br />OKが押されたときに「onsubmit」が呼ばれ、「e.data」に入力された値が格納されます。<br /><br /><a href=\"https://technote.space/uploads/2018/12/201812072354.png\"><img class=\"alignnone size-medium wp-image-606\" src=\"https://technote.space/uploads/2018/12/201812072354-300x196.png\" alt=\"\" width=\"300\" height=\"196\"></a><br /><br />後は<br /><pre>ed.selection.getNode()</pre><br />で選択されているノードを取得したり<br /><pre>ed.selection.getContent()</pre><br />で選択されている文を取得したりして<br /><br />取得した入力値と取得したノードや分を使用して<br /><pre>ed.execCommand('mceInsertContent', 0, html);</pre><br />でその個所を置き換えたりすることができます。<br /><br />このあたりの操作に関しては公式ドキュメントを参照してください。<br /><br /><div class=\"blog-card\"><iframe src=\"https://blog-card-ten.vercel.app/card/https%3A%2F%2Fwww.tiny.cloud%2Fdocs%2F?id=blog-card-pc04ovuk5v&#x26;referrer=https%3A%2F%2Ftechnote.space%2Fposts%2Fwpxml-wordpress-tinymce-dialog%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" data-id=\"blog-card-pc04ovuk5v\"></iframe></div><br /><h2 id=\"まとめ\">まとめ<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#まとめ\"><svg class=\"icon icon-link\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" aria-labelledby=\"paperclipIconTitle\" stroke=\"#2329EE\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#131996\"><path d=\"M7.93517339,13.7795989 L15.1617306,6.55304173 C16.03921,5.67631227 17.4656766,5.67631227 18.343156,6.55304173 C19.2206355,7.43052116 19.2206355,8.85773771 18.343156,9.73521714 L8.40091248,19.5477137 C6.93619681,21.0124294 4.56325242,21.0124294 3.09853675,19.5477137 C1.63382108,18.083748 1.63382108,15.7093037 3.09853675,14.245338 L12.9335328,4.53783896 C14.9839848,2.48738701 18.3094068,2.48738701 20.3568588,4.53783896 C22.4088107,6.58904088 22.4088107,9.91146301 20.3583588,11.961915 L13.2390491,19.0819746\"></path></svg></a></h2><br />PHPとJavaScriptの両方を編集する必要があるため、少しハードルは高いです。<br /><br />ただ一度理解できれば自分で好きなようにボタンやダイアログを追加でき、編集作業をはかどらせることが可能になります。<br /><br />ダイアログで登録した値をdataで埋め込んでフロント側と連携することができるので、アイデア次第でなんでもできそうです。<br /><br />アイデアはあるけど実装が難しそうであれば<a href=\"https://www.lancers.jp/profile/technote\" rel=\"noreferrer noopener\" target=\"_blank\">Lancers</a>で作成のご相談もお受けしております。</body></html>","excerpt":"WordPress5.0からGutenbergという新しい投稿エディタがデフォルトになりましたが、プラグインで前のバージョンの投稿エディタ（TinyMCE）はまだ使えます。 また新しいエディタ内でも「フォーマット」⇒「Classic」からブ...","postType":"post","tags":[{"slug":"tinymce","name":"TinyMCE"}],"thumbnail":"https://technote.space/uploads/2018/12/201812071709.png","dominantColor":"rgba(200,204,200,1)","createdAt":"2018-12-07T14:55:55.000Z","updatedAt":null},"prev":{"id":"wpxml-wordpress-add-button-to-gutenberg","title":"Gutenbergエディタ（ブロックエディタ）にボタンを追加する","excerpt":"WordPressのバージョンが5.0になり、エディタが新しくなりました。 これまでのTinyMCEとは異なりReactを利用したモダンな実装になっており、エディタへの機能の追加方法も大きく変わりました。  ここでは選択した文字列を特定のク...","postType":"post","tags":[{"slug":"gutenberg","name":"Gutenberg"},{"slug":"richtext","name":"RichText"},{"slug":"%e3%82%ab%e3%82%b9%e3%82%bf%e3%83%9e%e3%82%a4%e3%82%ba","name":"カスタマイズ"},{"slug":"%e3%83%aa%e3%83%83%e3%83%81%e3%83%86%e3%82%ad%e3%82%b9%e3%83%88","name":"リッチテキスト"}],"thumbnail":"https://technote.space/uploads/2018/12/201812080407.png","createdAt":"2018-12-07T21:16:36.000Z","updatedAt":null},"next":{"id":"wpxml-marker-animation","title":"WordPressでマーカーアニメーション","excerpt":"先日マーカー（蛍光ペン）で線を引くようなアニメーションをつけるjQueryプラグインを作成しました。 <a href=\"\">動作デモはこちら</a>  せっかくなのでWordPressから簡単に使用できるようにプラグイン化しました。    ...","postType":"post","tags":[{"slug":"%e3%83%9e%e3%83%bc%e3%82%ab%e3%83%bc","name":"マーカー"},{"slug":"%e5%8b%95%e3%81%8f%e3%83%9e%e3%83%bc%e3%82%ab%e3%83%bc","name":"動くマーカー"},{"slug":"%e8%9b%8d%e5%85%89%e3%83%9a%e3%83%b3","name":"蛍光ペン"}],"thumbnail":"https://technote.space/uploads/2018/12/banner-772x250.png","createdAt":"2018-12-04T08:11:27.000Z","updatedAt":null},"headerPages":[],"footerPages":[{"label":"About","url":"/pages/wpxml-about/"},{"label":"プライバシーポリシー","url":"/pages/wpxml-privacy-policy/"},{"label":"お問い合わせ","url":"/pages/wpxml-contact/"}]},"__N_SSG":true}